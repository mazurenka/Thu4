[{"D:\\programming\\2ndStart\\Thursday\\4\\src\\reportWebVitals.ts":"1","D:\\programming\\2ndStart\\Thursday\\4\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"2","D:\\programming\\2ndStart\\Thursday\\4\\src\\api\\todolists-api.ts":"3","D:\\programming\\2ndStart\\Thursday\\4\\src\\index.tsx":"4","D:\\programming\\2ndStart\\Thursday\\4\\src\\components\\AddItemForm\\AddItemForm.tsx":"5","D:\\programming\\2ndStart\\Thursday\\4\\src\\utils\\error-utils.ts":"6","D:\\programming\\2ndStart\\Thursday\\4\\src\\app\\App.tsx":"7","D:\\programming\\2ndStart\\Thursday\\4\\src\\features\\Login\\Login.tsx":"8"},{"size":425,"mtime":1649863287693,"results":"9","hashOfConfig":"10"},{"size":4193,"mtime":1649863287944,"results":"11","hashOfConfig":"10"},{"size":2816,"mtime":1650478305858,"results":"12","hashOfConfig":"10"},{"size":752,"mtime":1649932090464,"results":"13","hashOfConfig":"10"},{"size":1595,"mtime":1649863287818,"results":"14","hashOfConfig":"10"},{"size":811,"mtime":1649863287991,"results":"15","hashOfConfig":"10"},{"size":1837,"mtime":1649933448122,"results":"16","hashOfConfig":"10"},{"size":3882,"mtime":1650301159093,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rahpq6",{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\programming\\2ndStart\\Thursday\\4\\src\\reportWebVitals.ts",[],"D:\\programming\\2ndStart\\Thursday\\4\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["38","39","40","41","42","43"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["44","45"],"D:\\programming\\2ndStart\\Thursday\\4\\src\\api\\todolists-api.ts",[],"D:\\programming\\2ndStart\\Thursday\\4\\src\\index.tsx",[],"D:\\programming\\2ndStart\\Thursday\\4\\src\\components\\AddItemForm\\AddItemForm.tsx",["46","47","48"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n",["49","50"],"D:\\programming\\2ndStart\\Thursday\\4\\src\\utils\\error-utils.ts",[],"D:\\programming\\2ndStart\\Thursday\\4\\src\\app\\App.tsx",[],"D:\\programming\\2ndStart\\Thursday\\4\\src\\features\\Login\\Login.tsx",["51"],{"ruleId":"52","severity":1,"message":"53","line":35,"column":8,"nodeType":"54","endLine":35,"endColumn":10,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":39,"column":8,"nodeType":"54","endLine":39,"endColumn":42,"suggestions":"57"},{"ruleId":"52","severity":1,"message":"56","line":46,"column":8,"nodeType":"54","endLine":46,"endColumn":54,"suggestions":"58"},{"ruleId":"52","severity":1,"message":"56","line":48,"column":95,"nodeType":"54","endLine":48,"endColumn":134,"suggestions":"59"},{"ruleId":"52","severity":1,"message":"56","line":49,"column":101,"nodeType":"54","endLine":49,"endColumn":140,"suggestions":"60"},{"ruleId":"52","severity":1,"message":"56","line":50,"column":107,"nodeType":"54","endLine":50,"endColumn":146,"suggestions":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":9,"nodeType":"68","messageId":"69","endLine":2,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":2,"column":14,"nodeType":"68","messageId":"69","endLine":2,"endColumn":20},{"ruleId":"66","severity":1,"message":"71","line":2,"column":22,"nodeType":"68","messageId":"69","endLine":2,"endColumn":33},{"ruleId":"62","replacedBy":"72"},{"ruleId":"64","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":47,"column":32,"nodeType":"76","endLine":47,"endColumn":49},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.","ArrayExpression",["77"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["78"],["79"],["80"],["81"],["82"],"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.",["83"],["84"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},{"desc":"87","fix":"90"},{"desc":"87","fix":"91"},{"desc":"87","fix":"92"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"93","text":"94"},"Update the dependencies array to be: [props]",{"range":"95","text":"96"},{"range":"97","text":"96"},{"range":"98","text":"96"},{"range":"99","text":"96"},{"range":"100","text":"96"},[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320]]